#!/usr/bin/ruby

class GitNum
  class << self
    def parse_args(args)
      case args[0]
      when nil
        print status
      when 'convert'
        print convert(args.drop(1))
      else
        `git #{args[0]} #{convert(args.drop(1))}`
      end
    end

    private

    def status
      indexes = filenames_by_index.invert
      status = git_status

      status.gsub!(/(\t)(.+:\s+)?(.+)/) do
        index = indexes[$3] || '?'
        "#{$1}#{$2}[#{index}] #{$3}"
      end

      status
    end

    def convert(indexes)
      filenames = filenames_by_index
      indexes.map { |index| filenames[index] || index }.join(' ')
    end

    def filenames_by_index
      i = 0
      git_status_porcelain.split("\n").reduce({}) do |filenames, status_line|
        i += 1
        filenames[i.to_s] = status_line[3..-1]
        filenames
      end
    end

    def git_status
      `git status --long`
    end

    def git_status_porcelain
      `git status --porcelain`
    end
  end
end

if __FILE__ == $PROGRAM_NAME
  GitNum.parse_args(ARGV)
end
